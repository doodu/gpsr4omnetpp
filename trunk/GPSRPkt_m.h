//
// Generated file, do not edit! Created by opp_msgc 3.3 from GPSRPkt.msg.
//

#ifndef _GPSRPKT_M_H_
#define _GPSRPKT_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0303
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif


/**
 * Class generated from <tt>GPSRPkt.msg</tt> by opp_msgc.
 * <pre>
 * message GPSRPkt
 * {
 *     fields:
 *         int destAddr;        
 *         int srcAddr;         
 * 	int ttl              =  1; 
 * 	unsigned long seqNum =  0; 
 * 
 * 	
 * 	int savedx;
 * 	int savedy;	
 * 	int dstx;
 * 	int dsty;	
 * }
 * </pre>
 */
class GPSRPkt : public cMessage
{
  protected:
    int destAddr_var;
    int srcAddr_var;
    int ttl_var;
    unsigned long seqNum_var;
    int savedx_var;
    int savedy_var;
    int dstx_var;
    int dsty_var;

    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const GPSRPkt&);

  public:
    GPSRPkt(const char *name=NULL, int kind=0);
    GPSRPkt(const GPSRPkt& other);
    virtual ~GPSRPkt();
    GPSRPkt& operator=(const GPSRPkt& other);
    virtual cPolymorphic *dup() const {return new GPSRPkt(*this);}
    virtual void netPack(cCommBuffer *b);
    virtual void netUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual int getDestAddr() const;
    virtual void setDestAddr(int destAddr_var);
    virtual int getSrcAddr() const;
    virtual void setSrcAddr(int srcAddr_var);
    virtual int getTtl() const;
    virtual void setTtl(int ttl_var);
    virtual unsigned long getSeqNum() const;
    virtual void setSeqNum(unsigned long seqNum_var);
    virtual int getSavedx() const;
    virtual void setSavedx(int savedx_var);
    virtual int getSavedy() const;
    virtual void setSavedy(int savedy_var);
    virtual int getDstx() const;
    virtual void setDstx(int dstx_var);
    virtual int getDsty() const;
    virtual void setDsty(int dsty_var);
};

inline void doPacking(cCommBuffer *b, GPSRPkt& obj) {obj.netPack(b);}
inline void doUnpacking(cCommBuffer *b, GPSRPkt& obj) {obj.netUnpack(b);}

#endif // _GPSRPKT_M_H_
